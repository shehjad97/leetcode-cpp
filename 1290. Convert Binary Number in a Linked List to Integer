/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int size(ListNode *head)
    {
        ListNode *tmp = head;
        int count = 0;
        while (tmp != NULL)
        {
            count++;
            tmp = tmp->next;
        }
        return count;
    }
    int recursion(ListNode *n, int sz)
    {
        if (n == NULL)
            return 0;
        int sum = 0; 
        sum += pow(2, sz) * n->val;
        return sum + recursion(n->next, sz-1);
    }
    int getDecimalValue(ListNode* head) {

        int sz = size(head);
        return recursion(head, sz - 1);
    }
};
