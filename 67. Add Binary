class Solution {
public:
    string addBinary(string a, string b) {
        string result;
        bool carry = false;

        if (a.length() > b.length()) {
            int num_of_0 = a.length() - b.length();
            string zeros;
            while(num_of_0--) {
                zeros += '0';
            }
            zeros += b;
            b = zeros;
        }

        if (a.length() < b.length()) {
            int num_of_0 = b.length() - a.length();
            string zeros;
            while(num_of_0--) {
                zeros += '0';
            }
            zeros += a;
            a = zeros;
        }

        for (int i = a.length()-1; i > -1; i--) {
            if (a[i] == '0') {
                if (b[i] == '0') {
                    if (carry == true) {
                        result += '1';
                        carry = false;
                    } else {
                        result += '0';
                    }
                } else {
                    if (carry == true) {
                        result += '0';
                        // carry == true;
                    } else {
                        result += '1';
                    }
                }
            } else {
                if (b[i] == '0') {
                    if (carry == true) {
                        result += '0';
                        carry = true;
                    } else {
                        result += '1';
                    }
                } else {
                    if (carry == true) {
                        result += '1';
                        carry = true;
                    } else {
                        result += '0';
                        carry = true;
                    }
                }
            }
            if (carry == true && i == 0) {
                result += '1';
            }
        }
        reverse(result.begin(), result.end());
        return result;
    }
};

class Solution {
public:
    string addBinary(string a, string b) {
        string result;
        bool carry = false;

        if (a.length() > b.length()) {
            int num_of_0 = a.length() - b.length();
            string zeros;
            while(num_of_0--) {
                zeros += '0';
            }
            zeros += b;
            b = zeros;
        }

        if (a.length() < b.length()) {
            int num_of_0 = b.length() - a.length();
            string zeros;
            while(num_of_0--) {
                zeros += '0';
            }
            zeros += a;
            a = zeros;
        }

        for (int i = a.length()-1; i > -1; i--) {
            if (a[i] == '0') {
                if (b[i] == '0') {
                    if (carry == true) {
                        result += '1';
                        carry = false;
                    } else {
                        result += '0';
                    }
                } else {
                    if (carry == true) {
                        result += '0';
                        // carry == true;
                    } else {
                        result += '1';
                    }
                }
            } else {
                if (b[i] == '0') {
                    if (carry == true) {
                        result += '0';
                        carry = true;
                    } else {
                        result += '1';
                    }
                } else {
                    if (carry == true) {
                        result += '1';
                        carry = true;
                    } else {
                        result += '0';
                        carry = true;
                    }
                }
            }
            if (carry == true && i == 0) {
                result += '1';
            }
        }
        reverse(result.begin(), result.end());
        return result;
    }
};