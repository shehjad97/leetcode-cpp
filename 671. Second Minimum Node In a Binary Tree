/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> v;
    
    void preorder(TreeNode *root)
    {
        if (root == NULL) return;
        v.push_back(root->val);
        preorder(root->left);
        preorder(root->right);
    }

    int findSecondMinimumValue(TreeNode* root) {
        preorder(root);

        set<int> s;
        vector<int> res;
        for (int x : v) s.insert(x);
        for (int x : s) res.push_back(x);

        sort(res.begin(), res.end());

        if (res.size() > 1) return res[1];
        else return -1;
    }
};
